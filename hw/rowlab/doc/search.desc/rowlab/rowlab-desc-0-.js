searchState.loadedDescShard("rowlab", 0, "98-008: Intro to the Rust Programming Language\nOne billion.\nThe different locations that we want to aggregate …\nGiven an iterator that yields measurements for weather …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWeather station identifiers and their average temperatures.\nThe aggregation results for the billion row challenge.\nAggregate statistics for a specific [<code>WeatherStation</code>].\nUpdates the aggregation with a new measurement.\nReturns the argument unchanged.\nReturns the argument unchanged.\nRetrieve the stats of a specific station, if it exists. …\nUpdates the metrics for the given station with a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum temperature measurement.\nThe average / mean temperature measurement.\nThe minimum temperature measurement.\nCreates a new <code>StationAggregation</code> for computing …\nCreates an empty <code>AggregationResult</code>.\nHelper field for calculating mean (sum_measurements / …\nA map from weather station identifier to its aggregate …\nHelper field for calculating mean (sum_measurements / …\nA very magical number. Used for seeding the random number …\nAn iterator for <code>WeatherStations</code> that yields random …\nThe standard deviation for the normally-distributed …\nThe file containing the different weather stations and …\nThe regex pattern to read in the possible weather stations …\nThe different locations that we want to aggregate …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a measurements iterator that yields random …\nA seedable random number generator.\nWeather station identifier references and normal …\nWeather station identifiers and their average temperatures.")