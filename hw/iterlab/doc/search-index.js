var searchIndex = new Map(JSON.parse('[["iterlab",{"t":"CCCCHHHHCCCCFNNNNNNNNNNNONNNFNNNNNNNNNNNONNNFNNNNNNNNNNNNONNNFNNNNNNNNNNNOONNN","n":["hofs","iterators","fib_fun","sum_squares","read_the_docs","sum_fib_range","sum_of_squared_odd_numbers","sum_of_squared_odd_numbers_bad","cycle","double","fibonacci","interleave","Cycle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","into","into_iter","new","next","to_owned","todo","try_from","try_into","type_id","Double","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","into","into_iter","new","next","to_owned","todo","try_from","try_into","type_id","Fibonacci","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","from","into","into_iter","new","next","to_owned","todo","try_from","try_into","type_id","Interleave","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","into","into_iter","new","next","to_owned","todo1","todo2","try_from","try_into","type_id"],"q":[[0,"iterlab"],[2,"iterlab::hofs"],[4,"iterlab::hofs::fib_fun"],[6,"iterlab::hofs::sum_squares"],[8,"iterlab::iterators"],[12,"iterlab::iterators::cycle"],[28,"iterlab::iterators::double"],[44,"iterlab::iterators::fibonacci"],[61,"iterlab::iterators::interleave"],[78,"alloc::vec"],[79,"core::clone"],[80,"core::option"],[81,"core::iter::traits::iterator"],[82,"core::marker"],[83,"core::result"],[84,"core::any"]],"i":"`````````````j00000000000000`Al00000000000000`An000000000000000`B`000000000000000","f":"````{b{{d{b}}}}{{bb}b}{bb}0`````{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{{f{{j{c}}}}}{{j{c}}}{ll}}{{f{f{hc}}}n{}}{{fA`}n}{cc{}}{{}c{}}{{}c{}}{c{{j{c}}}l}{{{f{h{j{c}}}}}Ab{lAd}}{fc{}}{jAf}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{fAj}`>={{{f{{Al{c}}}}}{{Al{c}}}l}<;:98{c{{Al{c}}}{Adl}}{{{f{h{Al{c}}}}}Ab{Adl}}7{AlAf}654`{f{{f{c}}}{}}{{{f{h}}}{{f{hc}}}{}}{{{f{An}}}An}{{f{f{hc}}}n{}}{{fA`}n}{{}An}{cc{}}{{}c{}}{{}c{}}{{bb}An}{{{f{hAn}}}{{Ab{c}}}{}}{fc{}}{Ann}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{fAj}`?>{{{f{{B`{ce}}}}}{{B`{ce}}}ll}=<:98{{ce}{{B`{ce}}}Ad{{Ad{}{{Bb{}}}}}}{{{f{h{B`{ce}}}}}AbAd{{Ad{}{{Bb{}}}}}}7{B`Af}0654","D":"Dd","p":[[1,"usize"],[5,"Vec",78],[1,"reference",null,null,1],[0,"mut"],[5,"Cycle",12],[10,"Clone",79],[1,"unit"],[1,"u8"],[6,"Option",80,null,1],[10,"Iterator",81],[5,"PhantomData",82],[6,"Result",83,null,1],[5,"TypeId",84],[5,"Double",28],[5,"Fibonacci",44],[5,"Interleave",61],[17,"Item"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACwADAAOAAQAFQAAABgABAAeAAQAJQAAACgABAAuAAQANgAAADkABAA/AAQARgAAAEkABQA=","P":[[13,"T"],[15,"I"],[16,"T"],[17,""],[18,"T"],[19,"U"],[20,"I"],[23,"T"],[24,""],[25,"U,T"],[26,"U"],[27,""],[29,"T"],[31,"I"],[32,"T"],[33,""],[34,"T"],[35,"U"],[36,"I"],[39,"T"],[40,""],[41,"U,T"],[42,"U"],[43,""],[45,"T"],[47,""],[48,"T"],[49,""],[51,"T"],[52,"U"],[53,"I"],[54,""],[55,"Iterator::Item"],[56,"T"],[57,""],[58,"U,T"],[59,"U"],[60,""],[62,"T"],[64,"I,J"],[65,"T"],[66,""],[67,"T"],[68,"U"],[69,"I"],[70,"I,J"],[72,"T"],[73,""],[75,"U,T"],[76,"U"],[77,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2950]}