searchState.loadedDescShard("iterlab", 0, "98-008: Intro to the Rust Programming Language\nThis module contains some functions that require …\nThis module contains 4 iterators that you will implement!\nA lot of documentation, if you choose to read it. Do this …\nA quick exercise to get familiar with using iterators and …\nFor every <code>i</code>th number from <code>0..n</code>, find the sum of the first <code>i</code>\nFind the sum of the range of fibonacci numbers defined by …\nMake sure to read the documentation for …\nFinds the sum of squared odd numbers, where the largest …\nA cycling iterator! Do this <strong>second</strong>.\nA doubled iterator! Do this <strong>fourth</strong>.\nThe Fibonacci sequence! Do this <strong>first</strong>.\nAn interleaved iterator! Do this <strong>third</strong>.\nA struct that is intended to be an iterator that …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Cycle</code> iterator from the given iterator.\nAdvances the iterator and returns the next item in the …\nCreates an iterator that doubles each element of an input …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Double</code> iterator from the given iterator.\nAdvances the iterator and returns the next doubled element.\nRepresents an iterator that generates the Fibonacci …\nImplement a default implementation for <code>Fibonacci</code>, where …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Fibonacci</code> struct starting with the given <code>start</code>…\nAdvances the iterator and returns the next Fibonacci …\nCreates an iterator that interleaves elements from two …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Interleave</code> iterator from the given two …\nAdvances the iterator and returns the next interleaved …")